1> List = qsort:randomElems(20,-20,20).
[-6,8,8,3,-3,-16,-4,-14,-8,10,6,2,-7,10,-7,-12,-3,-12,-12,-16]

2> Map = fun M(_,[]) -> []; M(F, [H | T]) -> [F(H) | M(F,T)] end.
#Fun<erl_eval.37.126501267>

3> Map(fun (X) -> 0 end, List).
[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]

4> Filter = fun F(_,[]) -> []; F(P,L) -> [Y || Y <- L, P(Y)] end.
#Fun<erl_eval.37.126501267>

5> Filter(fun (X) -> X < 0 end, List).
[-6,-3,-16,-4,-14,-8,-7,-7,-12,-3,-12,-12,-16]

6> SumDigits = fun(X) ->
    L = [list_to_integer([Char]) || Char <- integer_to_list(X)],
         lists:foldl(fun(Y, Acc) -> Y + Acc end, 0, L) end.

7> SumDigits(123456789).
45

8> 1> ListMilion = qsort:randomElems(1000000, 0, 1000).
   [504,416,91,990,784,501,308,302,976,926,594,809,63,519,510,
    139,963,121,731,517,860,970,47,39,150,779,498,304,218|...]

9> lists:filter (fun (X) -> SumDigits(X) rem 3 == 0; (_) -> false end, ListMilion).
   [504,990,501,594,63,519,510,963,39,150,498,609,615,639,642,
    564,12,756,321,579,30,879,90,450,513,663,930,744,558|...]